<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper 엘리먼트의 namespace="패키지 경로가 포함된 인터페이스 -->
<!-- - 인터페이스 내부에 메소드명이 선언되어 있어야 한다. -->
<!-- - 이 메소드 명과 'id=식별자' 가 일치해야 한다. -->
<mapper namespace="com.test.sm.ICreateDAO">

	<!-- id="식별자" 속성 추가 -->
	<!-- - 인터페이스에 선언된 메소드의 이름과 일치해야 하며 -->
	<!--   호출 메소드명 역할을 수행하게 된다. -->
	
	
	<!-- resultType="패키지 경로가 포함된 자료형 클래스" 속성 추가 -->
	<!-- 
		 - string : java.lang.String 
		 - byte : java.lang.Byte
		 - long : java.lang.Long
		 - short : java.lang.Short
		 - int : java.lang.Integer
		 - Integer : java.lang.Integer
		 - double : java.lang.Double
		 - float : java.lang.Float
		 - boolean : java.lang.Boolean
		 - decimal : java.math.BigDecimal
		 - Object : java.lang.Object
		 - map : java.util.Map
		 - hashmap : java.util.HashMap
		 - list : java.util.List
		 - arraylist : java.util.ArrayList
		 - collection : java.util.Collection
		 - iterator : java.util.Iterator
	 -->
	
	
	
	<!-- 쿼리 내부에 있는 컬럼명의 정보가 -->
	<!-- 자료형 클래스(DTO) 멤버 변수(속성)와 일치하는 경우 -->
	<!-- 자동 매핑이 이루어진다. -->
	<select id="list" resultType="com.test.sm.CreateDTO">
		SELECT RIDING_ID, LEADER_ID, STEP_ID, SPEED_ID, MOOD_P_ID, 
		DINING_P_ID, EAT_P_ID, AGE_P_ID, SEX_P_ID, E_GRADE_ID, RIDING_NAME,
		START_DATE, END_DATE, CREATED_DATE, MAXIMUM, MEET_LATI,
		MEET_LONGI, MEET_ADDRESS, MEET_DETAIL, START_LATI, START_LONGI, START_ADDRESS,
		START_DETAIL, END_LATI, END_LONGI, END_ADDRESS, DETAIL_ADDRESS, CONFIRM_DATE
		FROM RIDING
	</select>
	
	
	

	
	
	
	
	<select id="count" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT 
		FROM RIDING
	</select>
	
	
	
	<insert id="add">
	<!-- 	INSERT INTO RESTAURANT(RESTAURANT_ID, USER_ID, LATITUDE, LONGITUDE, RESTA_NAME, REGISTER_DATE, ADDRESS, DETAIL_ADDRESS)
		VALUES('${restaurant_id}', '${user_id}', '${latitude}' , '${longitude}' , '${resta_name}' , '${register_Date}' 
		, '${address}' , '${detail_address}') -->
	
		INSERT INTO RIDING(RIDING_ID, LEADER_ID, STEP_ID, SPEED_ID, MOOD_P_ID, 
		DINING_P_ID, EAT_P_ID, AGE_P_ID, SEX_P_ID, E_GRADE_ID, RIDING_NAME,
		START_DATE, END_DATE, CREATED_DATE, MAXIMUM, MEET_LATI,
		MEET_LONGI, MEET_ADDRESS, MEET_DETAIL, START_LATI, START_LONGI, START_ADDRESS,
		START_DETAIL, END_LATI, END_LONGI, END_ADDRESS, DETAIL_ADDRESS, CONFIRM_DATE 
		VALUES('${riding_id}', '${leader_id}', '${step_id}', '${speed_id}', '${mood_p_id}', 
		'${dining_p_id}', '${eat_p_id}', '${age_p_id}', '${sex_p_id}',
		'${e_grade_id}', '${riding_name}', '${start_date}', '${end_date}', '${created_date}', 
		'${maximum}', '${meet_lati}', '${meet_longi}', '${meet_address}', '${meet_detail}', '${start_lati}',
		'${start_longi}', '${start_address}', '${start_detail}', '${end_lati}', '${end_longi}', '${end_address}',
		'${detail_address}', '${confirm_date}')

	</insert>
	
	
	
	<select id="search" resultType="com.test.sm.CreateDTO">
      	SELECT RIDING_ID, LEADER_ID, STEP_ID, SPEED_ID, MOOD_P_ID, 
		DINING_P_ID, EAT_P_ID, AGE_P_ID, SEX_P_ID, E_GRADE_ID, RIDING_NAME,
		START_DATE, END_DATE, CREATED_DATE, MAXIMUM, MEET_LATI,
		MEET_LONGI, MEET_ADDRESS, MEET_DETAIL, START_LATI, START_LONGI, START_ADDRESS,
		START_DETAIL, END_LATI, END_LONGI, END_ADDRESS, DETAIL_ADDRESS, CONFIRM_DATE
      	FROM RIDING
      	WHERE RIDING_ID=#{riding_id}
   </select>
	
	
	
	
	

</mapper>
